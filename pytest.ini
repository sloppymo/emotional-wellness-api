[pytest]
# Test file patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    protocol: marks tests for protocol execution
    escalation: marks tests for escalation handling
    integration: marks integration tests
    slow: marks tests that take longer to run
    critical: marks tests for critical functionality

# Test configuration
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --cov=src.symbolic.veluria
    --cov-report=term-missing
    --cov-report=html
    --no-cov-on-fail

# Test environment
env =
    TESTING=1
    VELURIA_ENV=test
    LOG_LEVEL=DEBUG

# Test paths
testpaths = tests

# Async test configuration
asyncio_mode = auto

# Test output
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S
