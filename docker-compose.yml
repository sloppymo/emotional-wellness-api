version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
    environment:
      - ENVIRONMENT=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=wellness
      - POSTGRES_PASSWORD=wellness_password
      - POSTGRES_DB=emotional_wellness
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_KEY=dev_api_key_for_testing_only
      - JWT_SECRET_KEY=dev_jwt_secret_not_for_production
      - PHI_ENCRYPTION_KEY=dev_encryption_key_not_for_production
      - AUDIT_LOGGING_ENABLED=true
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=wellness
      - POSTGRES_PASSWORD=wellness_password
      - POSTGRES_DB=emotional_wellness
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wellness -d emotional_wellness"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
