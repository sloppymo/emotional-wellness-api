[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "emotional-wellness-api"
version = "0.1.0"
description = "HIPAA-Compliant Symbolic Emotional UX and Trauma-Informed AI SaaS"
readme = "README.md"
requires-python = ">=3.11"
license = "UNLICENSED"
authors = [
    { name = "Your Organization", email = "contact@example.com" }
]
dependencies = [
    "fastapi>=0.103.1",
    "uvicorn[standard]>=0.23.2",
    "pydantic>=2.3.0",
    "pydantic-settings>=2.0.3",
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.6",
    "asyncpg>=0.28.0",
    "sqlalchemy>=2.0.20",
    "alembic>=1.12.0",
    "redis>=4.6.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "cryptography>=41.0.3",
    "authlib>=1.2.1",
    "anthropic>=0.4.1",
    "numpy>=2.2.6",
    "scikit-learn>=1.7.0",
    "nltk>=3.8.1",
    "transformers>=4.39.3",
    "tokenizers>=0.15.2",
    "prometheus-fastapi-instrumentator>=6.1.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "gunicorn>=21.2.0",
    "docker>=6.1.3",
    "python-terraform>=0.10.1",
    "mkdocs>=1.5.2",
    "mkdocs-material>=9.2.6",
    "celery>=5.3.1",
    "flower>=2.0.1",
    "kombu>=5.3.1",
    "python-socketio>=5.9.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-env>=1.1.3",
    "pylint>=3.0.2",
    "black>=23.11.0",
    "mypy>=1.7.1",
    "isort>=5.12.0",
    "freezegun>=1.4.0",
    "hypothesis>=6.85.0",
    "faker>=20.1.0",
    "coverage>=7.3.2",
    "pytest-html>=4.1.1",
    "pytest-xdist>=3.3.1",
    "types-python-dateutil>=2.8.19.14",
    "types-pytz>=2023.3.1.0",
    "types-requests>=2.31.0.10",
    "ipython>=8.18.1",
    "ipdb>=0.13.13",
    "watchdog>=3.0.0"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src --cov-report=html --cov-report=term-missing"
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
    "W0511",  # fixme
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
    "R0915",  # too-many-statements
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "db", "fp", "np", "pd", "x", "y", "z"] 